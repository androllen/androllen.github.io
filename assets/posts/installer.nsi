; Script generated by the HM NIS Edit Script Wizard.
Unicode true 
ManifestDPIAware true 

; MUI 1.67 compatible ------
!include "MUI2.nsh"
!include "FileFunc.nsh"
!include "Common.nsh"
!include "x64.nsh"

; Best Compression
SetCompress Auto
SetCompressor /SOLID lzma
SetCompressorDictSize 64
SetDatablockOptimize On

; NSIS
Var OLD_UNINSTALLER
Var OLD_INSTDIR
Var OLD_DISPLAYNAME
Var TMP_UNINSTALLER

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "..\..\4Dogs\V3.0_TX\Installer\App.ico"
!define MUI_UNICON "..\..\4Dogs\V3.0_TX\Installer\App.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\..\4Dogs\V3.0_TX\Installer\SoftwareLicence.txt"
; 组件选择页面
!insertmacro MUI_PAGE_COMPONENTS
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN
;
!define MUI_FINISHPAGE_RUN_FUNCTION "LaunchLink"
!insertmacro MUI_PAGE_FINISH
;
Function LaunchLink
ExecShell "" "$INSTDIR\${PROGRAM_NAME}.exe"
FunctionEnd

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "SimpChinese"


OutFile "D:\Desktop\TxInstaller.exe"
InstallDir "$PROGRAMFILES\4dogs"
InstallDirRegKey HKLM "${PROGRAM_DIR_REGKEY}" ""
BrandingText "4dogs.cn Installer"
ShowInstDetails show
ShowUnInstDetails show

Install exe
Section ""
  CreateDirectory "$INSTDIR\Installer"
  SetOutPath "$INSTDIR\Installer"
  SetOverwrite ifnewer
  File /r "D:\4Dogs\V3.0_TX\Installer\nmap-7.12-setup.exe"
  File /r "D:\4Dogs\V3.0_TX\Installer\HASPUserSetup.exe"
	ExecWait "$INSTDIR\Installer\nmap-7.12-setup.exe"
	ExecWait "$INSTDIR\Installer\HASPUserSetup.exe"
SectionEnd


Section "主程序" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File /r "D:\MyShare\20190829\Debug\*"
  
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  CreateShortCut "$SMPROGRAMS\${PRODUCT_NAME}\${CONTROL_PANEL_NAME}.lnk" "$INSTDIR\${PROGRAM_NAME}.exe"
  CreateShortCut "$DESKTOP\${CONTROL_PANEL_NAME}.lnk" "$INSTDIR\${PROGRAM_NAME}.exe"
  Delete "$INSTDIR\Installer\nmap-7.12-setup.exe"
  Delete "$INSTDIR\Installer\HASPUserSetup.exe"CONTROL_PANEL_NAME
  RMDir "$INSTDIR\Installer"
SectionEnd


Section -AdditionalIcons
  CreateDirectory "$SMPROGRAMS\${PRODUCT_NAME}"
  CreateShortCut "$SMPROGRAMS\4dogs\Uninstall.lnk" "$INSTDIR\${PROGRAM_UNINSTALLER_NAME}.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\${PROGRAM_UNINSTALLER_NAME}.exe"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_DIR_REGKEY}" "" "$INSTDIR\${PROGRAM_NAME}.exe"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_DIR_REGKEY}" "Path" "$INSTDIR\${PROGRAM_NAME}.exe"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "UninstallString" "$INSTDIR\${PROGRAM_UNINSTALLER_NAME}.exe"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "DisplayIcon" "$INSTDIR\${PROGRAM_NAME}.exe"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

Section "-Finally"
; Compute and write the installation directory size
${GetSize} "$INSTDIR" "/S=0K" $0 $1 $2
IntFmt $0 "0x%08X" $0
WriteRegDWORD ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "EstimatedSize" "$0"
SectionEnd

Function .onInit
  ${IfNot} ${RunningX64}
    MessageBox MB_OK "此版本只能运行在64位机器上.$\n请尝试安装32位版本." /SD IDOK
    Abort
  ${EndIf}

!insertmacro IsWiresharkRunning

  ; Copied from https://nsis.sourceforge.io/Auto-uninstall_old_before_installing_new
  ReadRegStr $OLD_UNINSTALLER ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "UninstallString"
  ReadRegStr $OLD_INSTDIR ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_DIR_REGKEY}" "Path"
  ReadRegStr $OLD_DISPLAYNAME ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}" "DisplayName"

  ; We're reinstalling. Flip our control states according to what the
  ; user chose before.
  ; (we use the "all users" start menu, so select it first)
  SetShellVarContext all

  MessageBox MB_YESNOCANCEL|MB_ICONQUESTION \
    "$OLD_DISPLAYNAME 已经安装成功.\
     $\n$\n请问您想要卸载重新开始吗?" \
      /SD IDYES \
      IDYES prep_nsis_uninstaller \
      IDNO done
  Abort

done:

; Copy the uninstaller to $TEMP and run it.
; The uninstaller normally does this by itself, but doesn't wait around
; for the executable to finish, which means ExecWait won't work correctly.
prep_nsis_uninstaller:
  ClearErrors
  StrCpy $TMP_UNINSTALLER "$TEMP\${PROGRAM_NAME}_uninstaller.exe"
  ; ...because we surround UninstallString in quotes.
  StrCpy $0 $OLD_UNINSTALLER -1 1
  StrCpy $1 "$TEMP\${PROGRAM_NAME}_uninstaller.exe"
  StrCpy $2 1
  System::Call 'kernel32::CopyFile(t r0, t r1, b r2) 1'
  ExecWait "$TMP_UNINSTALLER /S _?=$OLD_INSTDIR"

  Delete "$TMP_UNINSTALLER"

FunctionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) 已成功地从你的计算机移除。"
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "你确实要完全移除 $(^Name) ，其及所有的组件？" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\*"
  RMDir /r $INSTDIR
  Delete "$SMPROGRAMS\${CONTROL_PANEL_NAME}\Uninstall.lnk"
  Delete "$DESKTOP\${CONTROL_PANEL_NAME}.lnk"

  RMDir "$SMPROGRAMS\${PRODUCT_NAME}"
  RMDir "$INSTDIR"

  DeleteRegKey ${PROGRAM_UNINST_ROOT_KEY} "${PROGRAM_UNINST_KEY}"
  DeleteRegKey HKLM "${PROGRAM_DIR_REGKEY}"
  SetAutoClose true
SectionEnd