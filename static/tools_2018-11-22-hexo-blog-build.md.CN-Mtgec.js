import{_ as o,c as t,o as a,ag as l}from"./chunks/framework.BeMlo_ux.js";const x=JSON.parse('{"title":"使用 hexo 托管到 Github 的博客","description":"","frontmatter":{"title":"使用 hexo 托管到 Github 的博客","date":"2016-11-02T14:45:27.000Z","tags":null,"categories":"Blog","outline":"deep"},"headers":[],"relativePath":"tools/2018-11-22-hexo-blog-build.md","filePath":"tools/2018-11-22-hexo-blog-build.md","lastUpdated":1747924457000}'),r={name:"tools/2018-11-22-hexo-blog-build.md"};function i(h,e,n,s,b,c){return a(),t("div",null,e[0]||(e[0]=[l('<h3 id="基本流程" tabindex="-1">基本流程 <a class="header-anchor" href="#基本流程" aria-label="Permalink to &quot;基本流程&quot;">​</a></h3><ol><li>使用在github 建立一个版本库 yourname.github.io</li><li>安装<code>hexo</code>需要node.js<a href="./2016-11-18-nvm-install-node-js-for-mac-and-windows.html">使用nvm 安装node.js</a></li><li>配置环境变量</li></ol><ol><li><p>安装完成后使用命令行</p><blockquote><p>测试 nvm v 输出版本号1.1.1<br> 测试 hexo v 输出版本号3.2.2</p></blockquote></li><li><p>在D盘创建博客文件夹 D://xxxx</p><blockquote><p>$ hexo init #在你指定的文件夹里初始化hexo 项目 $ npm install #安装依赖 $ hexo g #生成文件 $ hexo s #启动服务 $ hexo clean #清除服务 $ hexo new &quot;my new post&quot; #生成新文件 $ hexo g $ hexo s #启动服务并查看浏览器 $ hexo d #部署失败的话 需要安装使用下面命令 $ npm install hexo-deployer-git --save $ hexo d #继续失败 需要开启 ssh验证在<a href="http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html" target="_blank" rel="noreferrer">这里</a> 配置文件里_config.yml 修改你的 repository: <a href="mailto:git@github.com" target="_blank" rel="noreferrer">git@github.com</a>:androllen/androllen.github.io.git $ git config --global user.name &quot;androllen&quot; $ git config --global user.emai &quot;<a href="mailto:androllen@hotmail.com" target="_blank" rel="noreferrer">androllen@hotmail.com</a>&quot; $ hexo d</p></blockquote></li></ol><hr><h3 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h3><ol><li>如果hexo new &quot;一篇文章&quot;的时候，tags: shell 是小写想换成大写？ <blockquote><p>先把标签注释掉 hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入 404.html ? <blockquote><p>创建404.html页面 <a href="http://theme-next.iissnan.com/theme-settings.html#volunteer-404" target="_blank" rel="noreferrer">内容请点击</a> hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入自定义域名? <blockquote><p>创建一个 CNAME 名字 无后缀的文件 里面填入你的域名 yourdomain.com/yourdomain.me 在_config.yml 修改 url: <a href="http://yourdomain.com/" target="_blank" rel="noreferrer">http://yourdomain.com/</a> hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入自定义 favicon 图标? <blockquote><p><a href="https://github.com/favicon.ico" target="_blank" rel="noreferrer">从这里下载</a>放到source 文件夹即可 hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入 README.md ? <blockquote><p>在hexo 生成的source 文件夹里右键 Git Bash Here<br> hexo new &quot;README&quot;<br> 从 _post 文件夹里找到 README.md 放到source 文件里 hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入 about ? <blockquote><p>在hexo 生成的source 文件夹里右键 Git Bash Here<br> hexo new page about<br> 在 index.md 文件里增加你关于个人信息 hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入 tags ? <blockquote><p>在hexo 生成的source 文件夹里右键 Git Bash Here<br> hexo new page categories<br> type: &quot;tags&quot; comments: false<br> hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入 categories ? <blockquote><p>在hexo 生成的source 文件夹里右键 Git Bash Here<br> hexo new page categories<br> type: &quot;categories&quot; comments: false<br> hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想加入 捐助图片 和 头像 ? <blockquote><p>把支付宝和微信收款图片放到 \\themes\\next\\images\\uploads<br> 在 hexo _config.yml avatar: /images/avatar.png<br> 在 hexo 的主题_config.yml reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br> wechatpay: /images/wechatpay.jpg alipay: /images/alipay.jpg<br> hexo g<br> hexo s<br> hexo d</p></blockquote></li><li>如果想发布? <blockquote><p>在发布的文件夹下，右键 Git Bash Here hexo g<br> hexo s<br> hexo d</p></blockquote></li></ol><h3 id="更多请参考" tabindex="-1">更多请参考 <a class="header-anchor" href="#更多请参考" aria-label="Permalink to &quot;更多请参考&quot;">​</a></h3><ul><li><a href="http://theme-next.iissnan.com" target="_blank" rel="noreferrer">使用nexT主题教程</a></li></ul>',8)]))}const d=o(r,[["render",i]]);export{x as __pageData,d as default};
