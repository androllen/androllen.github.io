import{_ as e,c as s,o as t,ag as i}from"./chunks/framework.BeMlo_ux.js";const c=JSON.parse('{"title":"Create and publish a package for NuGet","description":"","frontmatter":{"title":"Create and publish a package for NuGet","date":"2016-12-19T22:42:13.000Z","outline":"deep"},"headers":[],"relativePath":"microsoft/2016-12-19-create-and-publish-a-package-for-nuget.md","filePath":"microsoft/2016-12-19-create-and-publish-a-package-for-nuget.md","lastUpdated":1747924457000}'),n={name:"microsoft/2016-12-19-create-and-publish-a-package-for-nuget.md"};function l(r,a,p,o,h,k){return t(),s("div",null,a[0]||(a[0]=[i(`<p>闲来无事，想把自己写的控件库push to NuGet share everyone 这是我的CCUWPToolkit for UWP<br> 下载地址：<a href="https://www.nuget.org/packages/CCUWPToolkit/" target="_blank" rel="noreferrer">https://www.nuget.org/packages/CCUWPToolkit/</a></p><h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h2><table tabindex="0"><thead><tr><th>工具</th><th>链接</th></tr></thead><tbody><tr><td>VS2015</td><td><a href="https://www.visualstudio.com/zh-hans/downloads/" target="_blank" rel="noreferrer">https://www.visualstudio.com/zh-hans/downloads/</a></td></tr><tr><td>NuGet.Tools.vsix for VS2015</td><td><a href="https://dist.nuget.org/visualstudio-2015-vsix/latest/NuGet.Tools.vsix" target="_blank" rel="noreferrer">https://dist.nuget.org/visualstudio-2015-vsix/latest/NuGet.Tools.vsix</a></td></tr><tr><td>NuGet</td><td><a href="https://www.nuget.org/downloads" target="_blank" rel="noreferrer">https://www.nuget.org/downloads</a></td></tr><tr><td>NuGetPackageExplorer</td><td><a href="https://github.com/NuGetPackageExplorer/NuGetPackageExplorer" target="_blank" rel="noreferrer">NuGetPackageExplorer</a></td></tr></tbody></table><ol><li>NuGet.Tools.vsix下载完成之后 双击直接安装到VS2015上的插件用来安装其他库 可以去项目:菜单-&gt;nuget pack 管理器 -&gt;nuget 控制台 输入: Install-Package CCUWPToolkit 即可安装</li><li>从浏览器上下载 NuGet.exe 根据 <em>官方提示：nuget.exe is the CLI tool itself, not an installer, so be sure to save the downloaded file from your browser instead of running it.</em></li></ol><blockquote><p>意思是说nuget.exe 不是安装器而是个命令行工具。为了方便发布，从你的浏览器下载把它保存放到 D:\\Program Files (x86)\\Nuget 目录下而不是运行它。<br> 新建一个系统变量NUGET_HOME 值:D:\\Program Files (x86)\\Nuget\\ 添加到path ：%NUGET_HOME% 安装完成之后Run Cmd nuget 成功继续往下看，不成功继续配置环境变量。</p></blockquote><h2 id="生成-nuspec文件" tabindex="-1">生成 .nuspec文件 <a class="header-anchor" href="#生成-nuspec文件" aria-label="Permalink to &quot;生成 .nuspec文件&quot;">​</a></h2><ol><li>在项目目录下启用命令行工具<br> nuget spec 已成功创建“Package.nuspec”修改成你项目的文件名CCUWPToolkit.nuspec并放到项目目录下</li><li>到项目解决方案中点开配置管理器，将所有的项目平台改为Any CPU Debug&amp;Release 编译</li><li>把bin文件夹修改成lib文件夹把Debug文件夹改成uap10.0文件夹</li><li>把Release文件夹里的dll换到uap10.0文件夹里</li><li>把Release文件夹里的Themes里面的文件换到uap10.0下Themes文件夹里</li></ol><h2 id="生成-nupkg包" tabindex="-1">生成 .nupkg包 <a class="header-anchor" href="#生成-nupkg包" aria-label="Permalink to &quot;生成 .nupkg包&quot;">​</a></h2><ol><li>到项目当前目录下启用命令行工具<br> nuget pack CCUWPToolkit.csproj // 生成 CCUWPToolkit.1.0.0.nupkg</li><li>使用<code>NuGetPackageExplorer</code>打开 CCUWPToolkit.1.0.0.nupkg<br> 按照组织如下，修改包</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CCUWPToolkit.csproj</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  CCUWPToolkit.nuspec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└─lib</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    └─uap10.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CCUWPToolkit.dll</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CCUWPToolkit.pdb</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  CCUWPToolkit.pri</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        │</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        └─CCUWPToolkit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CCUWPToolkit.xr.xml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ├─Properties</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      CCUWPToolkit.rd.xml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            └─Themes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                    Generic.xbf</span></span></code></pre></div><p>也就是说把bin\\Debug 路径下里的文件全部放到lib\\uap10.0 文件夹。这个时候Themes 里面的是源码xaml。我们需要替换成 Release 下的Themes即可。</p><h2 id="发布-nupkg包" tabindex="-1">发布 nupkg包 <a class="header-anchor" href="#发布-nupkg包" aria-label="Permalink to &quot;发布 nupkg包&quot;">​</a></h2><ol><li>注册一个 nuget用户 在API Key 这一栏下 单击 copy to clipboard</li><li>命令行发布 <code>nuget push CCUWPToolkit.1.0.0.nupkg e92ebc37-1d07-402a-a295-c4ca159d40c5 -Source https://www.nuget.org/api/v2/package</code></li><li>网站发布<br><a href="https://www.nuget.org/account" target="_blank" rel="noreferrer">https://www.nuget.org/account</a>选择Upload Your Package来上传你的包</li><li>NuGetPackageExplorer 发布<br><code>点击File菜单-&gt;发布</code></li><li>上传完成后打开<a href="https://www.nuget.org/account" target="_blank" rel="noreferrer">https://www.nuget.org/account</a> <a href="https://www.nuget.org/account/Packages" target="_blank" rel="noreferrer">Manage My Packages</a>页面进行管理</li></ol><p>详细请移步官网：<br><a href="https://docs.nuget.org/ndocs/schema/nuspec" target="_blank" rel="noreferrer">详情：nuspec</a><br><a href="https://docs.nuget.org/ndocs/quickstart/create-and-publish-a-package" target="_blank" rel="noreferrer">create-and-publish-a-package</a><br><a href="https://docs.nuget.org/ndocs/guides/create-uwp-packages" target="_blank" rel="noreferrer">create-uwp-packages</a></p>`,14)]))}const d=e(n,[["render",l]]);export{c as __pageData,d as default};
